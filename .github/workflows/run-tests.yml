# See more at: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: run-go-tests

env:
  GO111MODULE: on

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"

jobs:
  yamllint:
    name: Run yaml linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run yaml linter
        uses: ibiqlik/action-yamllint@v3.1
  asknancy:
    name: Ask Nancy (check dependencies)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Write go list
        run: go list -json -m all > go.list
      - name: Ask Nancy
        uses: sonatype-nexus-community/nancy-github-action@v1.0.3
        # continue-on-error: true
  test:
    needs: [yamllint, asknancy]
    strategy:
      matrix:
        go-version: [1.23.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Install the version of Go specified in the matrix
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      # Check out the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Attempt to use caching
      - name: Use Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      # Ensure go.sum is present in case it was never committed or is missing
      - name: Ensure go.sum exists
        run: |
          if [ ! -f go.sum ]; then
            echo "go.sum not found, running 'go mod tidy' to generate it."
            go mod tidy
          fi

      # Download modules (benefits from cache if it was found)
      - name: Download Modules
        run: go mod download

      # Cache golangci-lint
      - name: Cache golangci-lint cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-${{ hashFiles('**/*.go', '.golangci.yml') }}
          restore-keys: |
            ${{ runner.os }}-golangci-

      # Run tests
      - name: Run linter and tests
        run: make test-ci

      # Update the code coverage report
      - name: Update Code Coverage
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: true
          verbose: true
